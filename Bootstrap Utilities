Bootstrap Utilities:
Bootstrap 4 has a lot of utility/helper classes to quickly style elements without using any CSS code.

Borders
Use the border classes to add or remove borders from an element:

Example
<span class="border"></span>
<span class="border border-0"></span>
<span class="border border-top-0"></span>
<span class="border border-right-0"></span>
<span class="border border-bottom-0"></span>
<span class="border border-left-0"></span>

Border Color
Add a color to the border with any of the contextual border color classes:
Example

<span class="border border-primary"></span>
<span class="border border-secondary"></span>
<span class="border border-success"></span>
<span class="border border-danger"></span>
<span class="border border-warning"></span>
<span class="border border-info"></span>
<span class="border border-light"></span>
<span class="border border-dark"></span>
<span class="border border-white"></span>

Border Radius
Add rounded corners to an element with the rounded classes:

Example
<span class="rounded-sm"></span>
<span class="rounded"></span>
<span class="rounded-lg"></span>
<span class="rounded-top"></span>
<span class="rounded-right"></span>
<span class="rounded-bottom"></span>
<span class="rounded-left"></span>
<span class="rounded-circle"></span>
<span class="rounded-0"></span>

Float and Clearfix
Float an element to the right with the .float-right class or to the left with .float-left, and clear floats with the .clearfix class:

Responsive Floats
Float an element to the left or to the right depending on screen width, with the responsive float classes (.float-*-left|right - where * is sm (>=576px), md (>=768px), lg (>=992px) or xl (>=1200px)):    

Center Align
Center an element with the .mx-auto class (adds margin-left and margin-right: auto):
Width
Set the width of an element with the w-* classes (.w-25, .w-50, .w-75, .w-100, .mw-100):
Height
Set the height of an element with the h-* classes (.h-25, .h-50, .h-75, .h-100, .mh-100):
Spacing
Bootstrap 4 has a wide range of responsive margin and padding utility classes. They work for all breakpoints: xs (<=576px), sm (>=576px), md (>=768px), lg (>=992px) or xl (>=1200px)):

The classes are used in the format: {property}{sides}-{size} for xs and {property}{sides}-{breakpoint}-{size} for sm, md, lg, and xl.
Where property is one of:
m - sets margin
p - sets padding

Where sides is one of:
t - sets margin-top or padding-top
b - sets margin-bottom or padding-bottom
l - sets margin-left or padding-left
r - sets margin-right or padding-right
x - sets both padding-left and padding-right or margin-left and margin-right
y - sets both padding-top and padding-bottom or margin-top and margin-bottom
blank - sets a margin or padding on all 4 sides of the element

Where size is one of:
0 - sets margin or padding to 0
1 - sets margin or padding to .25rem (4px if font-size is 16px)
2 - sets margin or padding to .5rem (8px if font-size is 16px)
3 - sets margin or padding to 1rem (16px if font-size is 16px)
4 - sets margin or padding to 1.5rem (24px if font-size is 16px)
5 - sets margin or padding to 3rem (48px if font-size is 16px)
auto - sets margin to auto

Note: margins can also be negative, by adding an "n" in front of size:
n1 - sets margin to -.25rem (-4px if font-size is 16px)
n2 - sets margin to -.5rem (-8px if font-size is 16px)
n3 - sets margin to -1rem (-16px if font-size is 16px)
n4 - sets margin to -1.5rem (-24px if font-size is 16px)
n5 - sets margin to -3rem (-48px if font-size is 16px)

More Spacing Examples
.m-# / m-*-#	margin on all sides	
.mt-# / mt-*-#	margin top	
.mb-# / mb-*-#	margin bottom	
.ml-# / ml-*-#	margin left	
.mr-# / mr-*-#	margin right	
.mx-# / mx-*-#	margin left and right	
.my-# / my-*-#	margin top and bottom	
.p-# / p-*-#	padding on all sides	
.pt-# / pt-*-#	padding top	
.pb-# / pb-*-#	padding bottom	
.pl-# / pl-*-#	padding left	
.pr-# / pr-*-#	padding right	
.py-# / py-*-#	padding top and bottom	
.px-# / px-*-#	padding left and right	



Shadows
Use the shadow- classes to add shadows to an element:
<div class="shadow-none p-4 mb-4 bg-light">No shadow</div>
<div class="shadow-sm p-4 mb-4 bg-white">Small shadow</div>
<div class="shadow p-4 mb-4 bg-white">Default shadow</div>
<div class="shadow-lg p-4 mb-4 bg-white">Large shadow</div>

Vertical Align
Use the align- classes to change the alignment of elements (only works on inline, inline-block, inline-table and table cell elements):
<span class="align-baseline">baseline</span>
<span class="align-top">top</span>
<span class="align-middle">middle</span>
<span class="align-bottom">bottom</span>
<span class="align-text-top">text-top</span>
<span class="align-text-bottom">text-bottom</span>

Responsive Embeds
Create responsive video or slideshow embeds based on the width of the parent.
Add the .embed-responsive-item to any embed elements (like <iframe> or <video>) in a parent element with .embed-responsive and an aspect ratio of your choice:
<!-- 21:9 aspect ratio -->
<div class="embed-responsive embed-responsive-21by9">
  <iframe class="embed-responsive-item" src="..."></iframe>
</div>

Visibility
Use the .visible or .invisible classes to control the visibility of elements. Note: These classes do not change the CSS display value. They only add visibility:visible or visibility:hidden:

Position
Use the .fixed-top class to make any element fixed/stay at the top of the page:
Use the .fixed-bottom class to make any element fixed/stay at the bottom of the page:
Use the .sticky-top class to make any element fixed/stay at the top of the page when you scroll past it. Note: This class does not work in IE11 and earlier (will treat it as position:relative).

Close icon
Use the .close class to style a close icon. This is often used for alerts and modals. Note that we use the &times; symbol to create the actual icon (a better looking "x"). Also note that it floats right by default:

Screenreaders
Use the .sr-only class to hide an element on all devices, except screen readers:

Colors
As described in the Colors chapter, here is a list of all text and background color classes:

The classes for text colors are: .text-muted, .text-primary, .text-success, .text-info, .text-warning, .text-danger, .text-secondary, .text-white, .text-dark, .text-body (default body color/often black) and .text-light:

You can also add 50% opacity for black or white text with the .text-black-50 or .text-white-50 classes:

Background Colors
The classes for background colors are: .bg-primary, .bg-success, .bg-info, .bg-warning, .bg-danger, .bg-secondary, .bg-dark and .bg-light.

Note that background colors do not set the text color, so in some cases you'll want to use them together with a .text-* class.

Typography/Text Classes
As described in the Typography chapter, here is a list of all typography/text classes:

Class	Description	
.display-*		Display headings are used to stand out more than normal headings (larger 			font-size and lighter font-weight), and there are four classes to choose 				from: .display1, .display-2, .display-3, .display-4	

.font-weight-bold	Bold text	
.font-weight-bolder	Bolder bold text	
.font-weight-normal	Normal text	
.font-weight-light	Light weight text	
.font-weight-lighter	Lighter weight text	
.font-italic		Italic text	
.lead			Makes a paragraph stand out	
.small			Indicates smaller text (set to 85% of the size of the parent)	
.text-break		Prevents long text from breaking layout	
.text-center		Indicates center-aligned text	
.text-decoration-none	Removes the underline from a link	
.text-left		Indicates left-aligned text	
.text-justify		Indicates justified text	
.text-monospace	Monospaced text	
.text-nowrap		Indicates no wrap text	
.text-lowercase	Indicates lowercased text	
.text-reset		Resets the color of a text or a link (inherits the color from its parent)	
.text-right		Indicates right-aligned text	
.text-uppercase	Indicates uppercased text	
.text-capitalize	Indicates capitalized text	
.initialism		Displays the text inside an <abbr> element in a slightly smaller font size	

.list-unstyled	Removes the default list-style and left margin on list items (works on both <ul> and <ol>). This class only applies to
immediate children list items (to remove the default list-style from any nested lists, apply this class to any nested lists as well)	

.list-inline	Places all list items on a single line (used together with .list-inline-item on each <li> 		elements)	
.pre-scrollable	Makes a <pre> element scrollable	

Block Elements
To make an element into a block element, add the .d-block class. Use any of the d-*-block classes to control WHEN the element should
be a block element on a specific screen width

Block Elements
To make an element into a block element, add the .d-block class. Use any of the d-*-block classes to control WHEN the element should 
be a block element on a specific screen width

Bootstrap Flex:
Use flex classes to control the layout of Bootstrap 4 components.

Flexbox
The biggest difference between Bootstrap 3 and Bootstrap 4 is that Bootstrap 4 now uses flexbox, instead of floats, to handle the layout.

The Flexible Box Layout Module, makes it easier to design flexible responsive layout structure without using float or positioning. 
If you are new to flex, you can read about it in our CSS Flexbox Tutorial.

To create a flexbox container and to transform direct children into flex items, use the d-flex class:
To create an inline flexbox container, use the d-inline-flex class:

Horizontal Direction
Use .flex-row to display the flex items horizontally (side by side). This is default.
Tip: Use .flex-row-reverse to right-align the horizontal direction:

Vertical Direction
Use .flex-column to display the flex items vertically (on top of each other), or .flex-column-reverse to reverse the vertical 
direction:

Justify Content
Use the .justify-content-* classes to change the alignment of flex items. Valid classes are start (default), end, center, 
between or around:

Fill / Equal Widths
Use .flex-fill on flex items to force them into equal widths:

Grow
Use .flex-grow-1 on a flex item to take up the rest of the space. In the example below, the first two flex items take up their necessary
space, while the last item takes up the rest of the available space:
Tip: Use .flex-shrink-1 on a flex item to make it shrink if necessary.

Order
Change the visual order of a specific flex item(s) with the .order classes. Valid classes are from 0 to 12, where the lowest number 
has highest priority (order-1 is shown before order-2, etc..):

Auto Margins
Easily add auto margins to flex items with .mr-auto (push items to the right), or by using .ml-auto (push items to the left):

Wrap
Control how flex items wrap in a flex container with .flex-nowrap (default), .flex-wrap or .flex-wrap-reverse.

Click on the buttons below to see the difference between the three classes, by changin the wrapping of the flex items in the 
example box:

Align Content
Control the vertical alignment of gathered flex items with the .align-content-* classes. Valid classes are .align-content-start 
(default), .align-content-end, .align-content-center, .align-content-between, .align-content-around and .align-content-stretch.

Note: These classes have no effect on single rows of flex items.
Click on the buttons below to see the difference between the five classes, by changing the vertical

Align Items
Control the vertical alignment of single rows of flex items with the .align-items-* classes. Valid classes are .align-items-start, 
.align-items-end, .align-items-center, .align-items-baseline, and .align-items-stretch (default).

Align Self
Control the vertical alignment of a specified flex item with the .align-self-* classes. Valid classes are .align-self-start, 
.align-self-end, .align-self-center, .align-self-baseline, and .align-self-stretch (default).

Responsive Flex Classes
All flex classes comes with additional responsive classes, which makes it easy to set a specific flex class on a specific screen size.

The * symbol can be replaced with sm, md, lg or xl, which represents small, medium, large or xlarge screens.

Search for a specific flex class..

Class	Description	Example

Flex Container	 	

.d-*-flex	Creates a flexbox container for different screens	

.d-*-inline-flex	Creates an inline flexbox container for different screens	

Direction	 	

.flex-*-row	Display flex items horizontally on different screens	

.flex-*-row-reverse	Display flex items horizontally, and right-aligned, on different screens	

.flex-*-column	Display flex items vertically on different screens	

.flex-*-column-reverse	Display flex items vertically, with reversed order, on different screens screens	

Justified Content	 	

.justify-content-*-start	Display flex items from the start (left-aligned) on different screens	

.justify-content-*-end	Display flex items at the end (right-aligned) on different screens	

.justify-content-*-center	Display flex items in the center of a flex container on different screens	

.justify-content-*-between	Display flex items in "between" on different screens	

.justify-content-*-around	Display flex items "around" on different screens	

Fill / Equal Width	 	

.flex-*-fill	Force flex items into equal widths on different screens	

Grow	 	

.flex-*-grow-0	Don't make the items grow on different screens	

.flex-*-grow-1	Make items grow on different screens	

Shrink	 	

.flex-*-shrink-0	Don't make the items shrink on diferent screens	

.flex-*-shrink-1	Make items shrink on different screens	

Order	 	

.order-*-0-12	Change the order from 0 to 12 on small screens	

Wrap	 	

.flex-*-nowrap	Don't wrap items on different screens	

.flex-*-wrap	Wrap items on different screens	

.flex-*-wrap-reverse	Reverse the wrapping of items on different screens	

Align Content	 	

.align-content-*-start	Align gathered items from the start on different screens	

.align-content-*-end	Align gathered items at the end on different screens	

.align-content-*-center	Align gathered items in the center on different screens	

.align-content-*-around	Align gathered items "around" on different screens	

.align-content-*-stretch	Stretch gathered items on different screens	

Align Items	 	

.align-items-*-start	Align single rows of items from the start on different screens	

.align-items-*-end	Align single rows of items at the end on different screens	

.align-items-*-center	Align single rows of items in the center on different screens	

.align-items-*-baseline	Align single rows of items on the baseline on different screens	

.align-items-*-stretch	Stretch single rows of items on different screens	

Align Self	 	

.align-self-*-start	Align a flex item from the start on different screens	

.align-self-*-end	Align a flex item at the end on different screens	

.align-self-*-center	Align a flex item in the center on different screens	

.align-self-*-baseline	Align a flex item on the baseline on different screens	

.align-self-*-stretch	Stretch a flex item on different screens	
